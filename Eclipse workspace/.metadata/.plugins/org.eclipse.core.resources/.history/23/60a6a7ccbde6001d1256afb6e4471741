package com.Edabit;

import java.util.Arrays;

class Class_1 {
	 int warOfNumbers(int[] arry) {
		 int odd = 0;
		int even = 0;
		int result;
		for(int i = 0; i < arry.length; i++) {
			if(arry[i] % 2 == 0) {
				even += arry[i];
			}
			else {
				odd += arry[i];
			}
			}
		if (odd > even) {
			result = odd;
		}
		else {
			result = even;
		}
		return result;

	}
	 boolean cons(int[] a) {
		 Arrays.sort(a); 
		 for (int i = 0; i < a.length; i++) {
			 int sort = a[i+1];			 
			 if(sort - a[i] == 0) {
				 continue;
			 }
			 else {
				 return false;
			 }
		 }
		return true;
	 }
	/* Create a function that determines whether elements in an array can be re-arranged 
	 * to form a consecutive list of numbers where each number appears exactly once.

	 Examples
	 cons([5, 1, 4, 3, 2]) ➞ true
	 Can be re-arranged to form [1, 2, 3, 4, 5]

	 cons([5, 1, 4, 3, 2, 8]) ➞ false

	 cons([5, 6, 7, 8, 9, 9]) ➞ false
	 9 appears twice*/
}
public class Edabit_1 {

	public static void main(String[] args) {
		Class_1 c = new Class_1();
		int[] a = {5, 1, 4, 3, 2};
		System.out.println(c.cons(a));	
	}
		


}
